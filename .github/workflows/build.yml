name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  buildWebapp:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up npm
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: chmod +x gradlew && ./gradlew :webapp:npmSetup :webapp:npmInstall :webapp:npmBuildStatic

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: mosque-signage-static
        path: webapp/build
        if-no-files-found: error

  buildAndroid:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle


      - name: Retrieve the secret and decode it to a file
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.jks'
          fileDir: "./app"
          encodedString: ${{ secrets.ANDROID_SIGNING_KEY_JKS }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          ANDROID_SIGNING_PASSWORD: ${{ secrets.ANDROID_SIGNING_PASSWORD }}
        run: ./gradlew :app:build

      - name: Upload a APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mosque-signage-android
          path: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/apk/release/app-release.json

  deploypages:
    needs: [buildWebapp, buildAndroid]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
        - name: Download webapp artifact
          uses: actions/download-artifact@v4
          with:
            name: mosque-signage-static

        - name: Download android artifact
          uses: actions/download-artifact@v4
          with:
            name: mosque-signage-android

        - name: Setup Pages
          uses: actions/configure-pages@v5

        - name: Upload artifact
          uses: actions/upload-pages-artifact@v3
          with:
            path: '.'

        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4